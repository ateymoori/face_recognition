plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
}


android {
    compileSdkVersion 33
//    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "org.tensorflow.lite.examples.facerecognition"
        minSdkVersion 25
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    aaptOptions {
        noCompress "tflite"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
    buildFeatures {
        viewBinding true
    }
    kapt {
        correctErrorTypes true
    }
}

// import DownloadModels task
project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'
project.ext.TMP_DIR = project.buildDir.toString() + '/downloads'

// Download default models; if you wish to use your own models then
// place them in the "assets" directory and comment out this line.
//apply from: "download_model.gradle"

//apply from:'download_model.gradle'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.10"
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'

    implementation('org.tensorflow:tensorflow-lite:0.0.0-nightly') { changing = true }
    implementation 'androidx.core:core-ktx:1.9.0'
    androidTestImplementation 'com.google.truth:truth:1.0.1'

    // added MLKit dependencies for face detector
    implementation 'com.google.mlkit:face-detection:16.1.5'

    implementation "com.orhanobut:hawk:2.0.1"

    implementation 'com.google.dagger:hilt-android:2.35'
    kapt 'com.google.dagger:hilt-compiler:2.35'


    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"

    implementation "androidx.activity:activity-ktx:1.6.1"
    implementation "androidx.fragment:fragment-ktx:1.5.4"

    def coroutines_version = "1.3.9"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    //Retrofit
    def retrofit_version = "2.9.0"
    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    api "com.squareup.retrofit2:converter-gson:$retrofit_version"
    api "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"
    api "com.squareup.retrofit2:converter-scalars:$retrofit_version"

    //Glide
    def glide_version = "4.12.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt 'com.github.bumptech.glide:compiler:4.14.1'


    // ViewModel
    def lifecycle_version = "2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'

    implementation 'com.github.harry1453:android-bluetooth-serial:v1.1'
    // RxJava is also required.
    implementation 'io.reactivex.rxjava2:rxjava:2.1.12'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'com.karumi:dexter:6.2.3'
}
